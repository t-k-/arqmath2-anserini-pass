diff --git a/src/main/java/io/anserini/search/SearchCollection.java b/src/main/java/io/anserini/search/SearchCollection.java
index 834825e..1e660fb 100644
--- a/src/main/java/io/anserini/search/SearchCollection.java
+++ b/src/main/java/io/anserini/search/SearchCollection.java
@@ -168,12 +168,13 @@ public final class SearchCollection implements Closeable {
     public void run() {
       try {
         String id = String.format("ranker: %s, reranker: %s", taggedSimilarity.getTag(), cascade.getTag());
-        LOG.info("[Start] " + id);
+        LOG.info("[Start log] " + id);
 
         int cnt = 0;
         final long start = System.nanoTime();
         PrintWriter out = new PrintWriter(Files.newBufferedWriter(Paths.get(outputPath), StandardCharsets.US_ASCII));
         for (Map.Entry<K, Map<String, String>> entry : topics.entrySet()) {
+          long topic_start = System.nanoTime();
           K qid = entry.getKey();
 
           String queryString = "";
@@ -247,6 +248,8 @@ public final class SearchCollection implements Closeable {
           if (cnt % 100 == 0) {
             LOG.info(String.format("%d queries processed", cnt));
           }
+          long topic_durationMillis = TimeUnit.MILLISECONDS.convert(System.nanoTime() - topic_start, TimeUnit.NANOSECONDS);
+          LOG.info(String.format("RunTime %s %d", qid, topic_durationMillis));
         }
         out.flush();
         out.close();
@@ -713,7 +716,6 @@ public final class SearchCollection implements Closeable {
       return;
     }
 
-    final long start = System.nanoTime();
     SearchCollection searcher;
 
     // We're at top-level already inside a main; makes no sense to propagate exceptions further, so reformat the
@@ -727,7 +729,5 @@ public final class SearchCollection implements Closeable {
 
     searcher.runTopics();
     searcher.close();
-    final long durationMillis = TimeUnit.MILLISECONDS.convert(System.nanoTime() - start, TimeUnit.NANOSECONDS);
-    LOG.info("Total run time: " + DurationFormatUtils.formatDuration(durationMillis, "HH:mm:ss"));
   }
 }
